// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { SiUnit } from '../../com/openmeteo/si-unit.js';


export class ValueAndUnit {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ValueAndUnit {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

value():number {
  return this.bb!.readFloat32(this.bb_pos);
}

unit():SiUnit {
  return this.bb!.readInt8(this.bb_pos + 4);
}

static sizeOf():number {
  return 8;
}

static createValueAndUnit(builder:flatbuffers.Builder, value: number, unit: SiUnit):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.pad(3);
  builder.writeInt8(unit);
  builder.writeFloat32(value);
  return builder.offset();
}

}
