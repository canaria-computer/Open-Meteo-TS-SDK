// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { TimeRange } from '../../com/openmeteo/time-range.js';
import { ValuesAndUnit } from '../../com/openmeteo/values-and-unit.js';


export class ClimateDaily {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ClimateDaily {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsClimateDaily(bb:flatbuffers.ByteBuffer, obj?:ClimateDaily):ClimateDaily {
  return (obj || new ClimateDaily()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsClimateDaily(bb:flatbuffers.ByteBuffer, obj?:ClimateDaily):ClimateDaily {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ClimateDaily()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

time(obj?:TimeRange):TimeRange|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new TimeRange()).__init(this.bb_pos + offset, this.bb!) : null;
}

temperature2mMin(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

temperature2mMax(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

temperature2mMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

pressureMslMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

cloudcoverMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

precipitationSum(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

snowfallWaterEquivalentSum(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

relativeHumidity2mMin(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 20);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

relativeHumidity2mMax(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 22);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

relativeHumidity2mMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 24);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

windspeed10mMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 26);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

windspeed10mMax(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 28);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilMoisture0To10cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 30);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

shortwaveRadiationSum(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 32);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

et0FaoEvapotranspirationSum(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 34);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

leafWetnessProbabilityMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 36);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilMoisture0To100cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 38);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilMoisture0To7cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 40);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilMoisture7To28cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 42);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilMoisture28To100cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 44);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilTemperature0To100cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 46);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilTemperature0To7cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 48);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilTemperature7To28cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 50);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilTemperature28To100cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 52);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

vaporPressureDeficitMax(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 54);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

windgusts10mMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 56);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

windgusts10mMax(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 58);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

snowfallSum(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 60);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

rainSum(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 62);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

dewpoint2mMax(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 64);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

dewpoint2mMin(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 66);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

dewpoint2mMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 68);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

growingDegreeDaysBase0Limit50(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 70);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilMoistureIndex0To10cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 72);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

soilMoistureIndex0To100cmMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 74);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

daylightDuration(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 76);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

windspeed2mMax(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 78);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

windspeed2mMean(obj?:ValuesAndUnit):ValuesAndUnit|null {
  const offset = this.bb!.__offset(this.bb_pos, 80);
  return offset ? (obj || new ValuesAndUnit()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startClimateDaily(builder:flatbuffers.Builder) {
  builder.startObject(39);
}

static addTime(builder:flatbuffers.Builder, timeOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, timeOffset, 0);
}

static addTemperature2mMin(builder:flatbuffers.Builder, temperature2mMinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, temperature2mMinOffset, 0);
}

static addTemperature2mMax(builder:flatbuffers.Builder, temperature2mMaxOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, temperature2mMaxOffset, 0);
}

static addTemperature2mMean(builder:flatbuffers.Builder, temperature2mMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, temperature2mMeanOffset, 0);
}

static addPressureMslMean(builder:flatbuffers.Builder, pressureMslMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, pressureMslMeanOffset, 0);
}

static addCloudcoverMean(builder:flatbuffers.Builder, cloudcoverMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, cloudcoverMeanOffset, 0);
}

static addPrecipitationSum(builder:flatbuffers.Builder, precipitationSumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, precipitationSumOffset, 0);
}

static addSnowfallWaterEquivalentSum(builder:flatbuffers.Builder, snowfallWaterEquivalentSumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, snowfallWaterEquivalentSumOffset, 0);
}

static addRelativeHumidity2mMin(builder:flatbuffers.Builder, relativeHumidity2mMinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(8, relativeHumidity2mMinOffset, 0);
}

static addRelativeHumidity2mMax(builder:flatbuffers.Builder, relativeHumidity2mMaxOffset:flatbuffers.Offset) {
  builder.addFieldOffset(9, relativeHumidity2mMaxOffset, 0);
}

static addRelativeHumidity2mMean(builder:flatbuffers.Builder, relativeHumidity2mMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(10, relativeHumidity2mMeanOffset, 0);
}

static addWindspeed10mMean(builder:flatbuffers.Builder, windspeed10mMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(11, windspeed10mMeanOffset, 0);
}

static addWindspeed10mMax(builder:flatbuffers.Builder, windspeed10mMaxOffset:flatbuffers.Offset) {
  builder.addFieldOffset(12, windspeed10mMaxOffset, 0);
}

static addSoilMoisture0To10cmMean(builder:flatbuffers.Builder, soilMoisture0To10cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(13, soilMoisture0To10cmMeanOffset, 0);
}

static addShortwaveRadiationSum(builder:flatbuffers.Builder, shortwaveRadiationSumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(14, shortwaveRadiationSumOffset, 0);
}

static addEt0FaoEvapotranspirationSum(builder:flatbuffers.Builder, et0FaoEvapotranspirationSumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(15, et0FaoEvapotranspirationSumOffset, 0);
}

static addLeafWetnessProbabilityMean(builder:flatbuffers.Builder, leafWetnessProbabilityMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(16, leafWetnessProbabilityMeanOffset, 0);
}

static addSoilMoisture0To100cmMean(builder:flatbuffers.Builder, soilMoisture0To100cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(17, soilMoisture0To100cmMeanOffset, 0);
}

static addSoilMoisture0To7cmMean(builder:flatbuffers.Builder, soilMoisture0To7cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(18, soilMoisture0To7cmMeanOffset, 0);
}

static addSoilMoisture7To28cmMean(builder:flatbuffers.Builder, soilMoisture7To28cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(19, soilMoisture7To28cmMeanOffset, 0);
}

static addSoilMoisture28To100cmMean(builder:flatbuffers.Builder, soilMoisture28To100cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(20, soilMoisture28To100cmMeanOffset, 0);
}

static addSoilTemperature0To100cmMean(builder:flatbuffers.Builder, soilTemperature0To100cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(21, soilTemperature0To100cmMeanOffset, 0);
}

static addSoilTemperature0To7cmMean(builder:flatbuffers.Builder, soilTemperature0To7cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(22, soilTemperature0To7cmMeanOffset, 0);
}

static addSoilTemperature7To28cmMean(builder:flatbuffers.Builder, soilTemperature7To28cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(23, soilTemperature7To28cmMeanOffset, 0);
}

static addSoilTemperature28To100cmMean(builder:flatbuffers.Builder, soilTemperature28To100cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(24, soilTemperature28To100cmMeanOffset, 0);
}

static addVaporPressureDeficitMax(builder:flatbuffers.Builder, vaporPressureDeficitMaxOffset:flatbuffers.Offset) {
  builder.addFieldOffset(25, vaporPressureDeficitMaxOffset, 0);
}

static addWindgusts10mMean(builder:flatbuffers.Builder, windgusts10mMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(26, windgusts10mMeanOffset, 0);
}

static addWindgusts10mMax(builder:flatbuffers.Builder, windgusts10mMaxOffset:flatbuffers.Offset) {
  builder.addFieldOffset(27, windgusts10mMaxOffset, 0);
}

static addSnowfallSum(builder:flatbuffers.Builder, snowfallSumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(28, snowfallSumOffset, 0);
}

static addRainSum(builder:flatbuffers.Builder, rainSumOffset:flatbuffers.Offset) {
  builder.addFieldOffset(29, rainSumOffset, 0);
}

static addDewpoint2mMax(builder:flatbuffers.Builder, dewpoint2mMaxOffset:flatbuffers.Offset) {
  builder.addFieldOffset(30, dewpoint2mMaxOffset, 0);
}

static addDewpoint2mMin(builder:flatbuffers.Builder, dewpoint2mMinOffset:flatbuffers.Offset) {
  builder.addFieldOffset(31, dewpoint2mMinOffset, 0);
}

static addDewpoint2mMean(builder:flatbuffers.Builder, dewpoint2mMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(32, dewpoint2mMeanOffset, 0);
}

static addGrowingDegreeDaysBase0Limit50(builder:flatbuffers.Builder, growingDegreeDaysBase0Limit50Offset:flatbuffers.Offset) {
  builder.addFieldOffset(33, growingDegreeDaysBase0Limit50Offset, 0);
}

static addSoilMoistureIndex0To10cmMean(builder:flatbuffers.Builder, soilMoistureIndex0To10cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(34, soilMoistureIndex0To10cmMeanOffset, 0);
}

static addSoilMoistureIndex0To100cmMean(builder:flatbuffers.Builder, soilMoistureIndex0To100cmMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(35, soilMoistureIndex0To100cmMeanOffset, 0);
}

static addDaylightDuration(builder:flatbuffers.Builder, daylightDurationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(36, daylightDurationOffset, 0);
}

static addWindspeed2mMax(builder:flatbuffers.Builder, windspeed2mMaxOffset:flatbuffers.Offset) {
  builder.addFieldOffset(37, windspeed2mMaxOffset, 0);
}

static addWindspeed2mMean(builder:flatbuffers.Builder, windspeed2mMeanOffset:flatbuffers.Offset) {
  builder.addFieldOffset(38, windspeed2mMeanOffset, 0);
}

static endClimateDaily(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // time
  return offset;
}

}
